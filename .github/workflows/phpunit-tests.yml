name: Test Suite

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.4', '7.3']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress_test
      WP_VERSION: latest
      WP_MULTISITE: '0'
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        ini-values: post_max_size=256M
        coverage: xdebug #optional, setup coverage driver
        extensions: mysqli, mbstring, intl
        tools: composer:v1

    - name: Check PHP Version
      run: php -v

    - name: Composer install
      run: composer install --optimize-autoloader --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction

    - name: Install WP Tests
      run: ./vendor/bin/install-wp-tests.sh ${MYSQL_DATABASE} ${MYSQL_USER} ${MYSQL_PASSWORD} ${DB_HOST}:${DB_PORT} ${WP_VERSION}

    - name: Run PHP compatibility tests
      if: ( matrix.php-versions == '7.4' )
      run: vendor/bin/phpcs --standard=phpcompat.xml.dist --report=summary

    - name: Static Analysis
      if: ( matrix.php-versions == '7.4' )
      run: vendor/bin/phpstan --memory-limit=512M

    - name: phpunit tests
      run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      if: ( github.event_name == 'push' && matrix.php-versions == '7.4' )
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
